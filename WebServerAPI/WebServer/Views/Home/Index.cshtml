
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.3.911/styles/kendo.common-material.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.3.911/styles/kendo.material.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.3.911/styles/kendo.material.mobile.min.css" />

    <script src="https://kendo.cdn.telerik.com/2018.3.911/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2018.3.911/js/kendo.all.min.js"></script>

    <style>
        * {
            margin: 0;
            padding: 0;
            font-family: Arial, Helvetica, sans-serif;
            box-sizing: padding-box;
        }

        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
            border-width: 0;
        }

        .btnBP, .btnTK {
            text-align: center;
            display: block;
            margin: 1em 20%;
        }

        .hide {
            transition: 0.4s;
            display: none;
        }

        .show {
            transition: 0.4s;
            display: block;
        }

        .border-style {
            margin: 2em 0 0 0;
            border: 1px solid;
            border-radius: 10px;
            overflow: hidden;
        }

        h3 {
            height: 2em;
            line-height: 2em;
            margin-left: 2em;
        }

        .k-tabstrip:focus {
            box-shadow: none;
            -webkit-box-shadow: none;
        }

        table {
            padding: 0 1em 0 1em;
        }
    </style>

</head>
<body>
    <div id="container">
        <div id="top-menu"></div> @*#top-menu*@
        <div id="main-menu">
            <div id="tabstrip-left">
                <ul>
                    <li id="getting-started" class="k-state-active">Giới thiệu</li>
                    <li id="menu-xem-ket-qua">
                        @*Xem kết quả*@
                        Thống kê
                    </li>
                    <li id="menu-thong-tin-can-bo">
                        Thông tin cán bộ
                    </li>
                    <li id="menu-thong-ke-bao-cao">
                        Báo cáo
                    </li>
                </ul> @*#tabstrip-left*@

                <div>Giới thiệu</div>
                <div id="xem-ket-qua">
                    <div id="cac-bo-phan">
                        @*Tên các bộ phận*@
                    </div> @*#cac-bo-phan*@
                    <div id="bo-phan">
                        <div>
                            <h1 style="display: inline">@*Tên bộ phận*@</h1>
                            <span class="k-icon k-i-undo" style="float: right; height: 2em; width: 2em; cursor: pointer" onclick="backBP()"></span>
                            <span style="float: right; height: 2em; line-height: 2em; cursor: pointer" onclick="backBP()">Quay lại</span>
                            <hr />
                            <div id="content-ten-can-bo" style="width: 30%; float: right">
                                <div class="border-style" style="margin: 2em; border-color: #88aff5; border-radius: 10px; overflow:hidden">
                                    <div style="width: 100%; background-color: #88aff5">
                                        <center><h3 style="display: inline">CÁN BỘ</h3></center>
                                    </div>
                                    <div id="div-button-canbo"></div>@*#div-button-canbo*@
                                </div>
                            </div>
                            <div id="content-bp">
                                <div id="div-chart-column-bp" style="margin: 1em 5em 0 5em; width: 55%; float: left">
                                    <div id="chart-column-bp">@*Biểu đồ cột*@</div>
                                    <div id="div-year-column" style="width: 20%; margin: 1em 40%">
                                        <label>Chọn năm:</label>
                                        <input id="year-column" title="Chọn thời gian" style="width: 100%" />
                                    </div>
                                </div>@*#div-chart-column-bp*@
                                <div style="clear:both"></div>
                                <hr />
                                <div style="width: 50%; float: left">
                                    <div id="chart-circle-bp">@*Biểu đồ tròn*@</div>
                                    <div id="div-month-circle" style="width: 20%; margin: 1em 40%">
                                        <div style="height: 2em; text-align:center">
                                            <input type="checkbox" id="cb-all" checked="checked" style="line-height: 2em" />
                                            <span style="line-height: 2em">Xem tất cả</span>
                                        </div>
                                        <div id="div-month-circle-1">
                                            <input id="month-circle" title="Chọn thời gian" style="width: 100%" />
                                        </div>
                                        <div style="margin-top: 2em">
                                            <center><span id="click-details-bp" style="cursor:pointer; color:cornflowerblue">Xem chi tiết</span></center>
                                        </div>
                                    </div>@*#div-month-circle*@
                                </div>
                                <div style="width: 48%; float:right">
                                    <div style="border-color: #cecece; background-color: #cecece; margin-right: 2em" class="border-style">
                                        <h3 id="span-title-table-1">Bảng kết quả đánh giá (Tổng hợp)</h3>
                                        <div id="grid-ty-le"></div>
                                    </div>
                                </div>
                                <div id="table-details-bp" style="clear:both; width: 100%">
                                    <div style="border-color: #37b24d; background-color: #37b24d; width: 45%; float:left; margin-left: 2em" class="border-style">
                                        <h3 id="span-title-table-2">Mức độ - Rất hài lòng (Tổng hợp)</h3>
                                        <div id="grid-rat-hai-long"></div>
                                    </div>
                                    <div style="border-color: #228be6; background-color: #228be6; width: 45%; float:right; margin-right: 2em" class="border-style">
                                        <h3 id="span-title-table-3">Mức độ - Hài lòng (Tổng hợp)</h3>
                                        <div id="grid-hai-long"></div>
                                    </div>
                                    <div style="border-color: #ffd43b; background-color: #ffd43b; width: 45%; float:left; margin-left: 2em" class="border-style">
                                        <h3 id="span-title-table-4">Mức độ - Bình thường (Tổng hợp)</h3>
                                        <div id="grid-binh-thuong"></div>
                                    </div>
                                    <div style="border-color: #fa5252; background-color: #fa5252; width: 45%; float:right; margin-right: 2em" class="border-style">
                                        <h3 id="span-title-table-5">Mức độ - Không hài lòng (Tổng hợp)</h3>
                                        <div id="grid-khong-hai-long"></div>
                                    </div>
                                </div>@*#table-details-bp*@
                            </div>
                        </div>
                    </div> @*#bo-phan*@
                    <div id="can-bo">
                        <div>
                            <h1 style="display: inline">@*Tên cán bộ*@</h1>
                            <span class="k-icon k-i-undo" style="float: right; height: 2em; width: 2em; cursor: pointer" onclick="backCB()"></span>
                            <span style="float: right; height: 2em; line-height: 2em; cursor: pointer" onclick="backCB()">Quay lại</span>
                            <hr />
                            <div id="content-can-bo">
                                <div id="div-chart-column-cb" style="margin: 1em 5em 0 5em">
                                    <div id="chart-column-cb">@*Biểu đồ cột*@</div>
                                    <div id="div-year-column-cb" style="width: 20%; margin: 1em 40%">
                                        <label>Chọn năm:</label>
                                        <input id="year-column-cb" title="Chọn thời gian" style="width: 100%" />
                                    </div>
                                </div>@*#div-chart-column-cb*@
                                <hr />
                                <div style="width: 50%; float: left">
                                    <div id="chart-circle-cb">@*Biểu đồ tròn*@</div>
                                    <div id="div-month-circle-cb" style="width: 20%; margin: 1em 40%">
                                        <div style="height: 2em; text-align:center">
                                            <input type="checkbox" id="cb-all-cb" checked="checked" style="line-height: 2em" />
                                            <span style="line-height: 2em">Xem tất cả</span>
                                        </div>
                                        <div id="div-month-circle-cb-1">
                                            <input id="month-circle-cb" title="Chọn thời gian" style="width: 100%" />
                                        </div>
                                        <div style="margin-top: 2em">
                                            <center><span id="click-details-cb" style="cursor:pointer; color:cornflowerblue">Xem chi tiết</span></center>
                                        </div>
                                    </div>@*#div-month-circle-cb*@
                                </div>
                            </div>
                            <div style="width: 48%; float:right">
                                <div style="border-color: #cecece; background-color: #cecece" class="border-style">
                                    <h3 id="span-title-table-cb-1">Bảng kết quả đánh giá (Tổng hợp)</h3>
                                    <div id="grid-ty-le-cb"></div>
                                </div>@*Bảng kết quả đánh giá*@
                            </div>
                            <div id="table-details-cb" style="clear:both; width: 100%">
                                <div style="border-color: #cecece; background-color: #cecece" class="border-style">
                                    <h3 id="span-title-table-gop-y">Bảng góp ý (Tổng hợp)</h3>
                                    <div id="grid-gop-y"></div>
                                </div>@*Bảng góp ý*@
                            </div>@*#table-details-cb*@
                        </div>
                    </div>@*#can-bo*@
                </div> @*#xem-ket-qua*@

                <div id="tai-khoan-can-bo">
                    <div id="tai-khoan-ten-bo-phan"></div>
                    <div id="div-tai-khoan-can-bo">
                        <h1 style="display: inline">@*Tên bộ phận*@</h1>
                        <span class="k-icon k-i-undo" style="float: right; height: 2em; width: 2em; cursor: pointer" onclick="backTK()"></span>
                        <span style="float: right; height: 2em; line-height: 2em; cursor: pointer" onclick="backTK()">Quay lại</span>
                        <hr />
                        <div style="margin: 1em 5em 0 5em">
                            <div id="grid-tai-khoan-can-bo"></div>
                        </div>
                    </div>
                </div> @*#tai-khoan-can-bo*@

                <div id="thong-ke-bao-cao">
                    <div id="tieu-chi-bao-cao" style="width: 100%">
                        <table style="width: 100%; table-layout:fixed">
                            <tr>
                                <td style="width: 20%">
                                    <label>Bộ phận: </label>
                                </td>
                                <td style="width: 80%">
                                    <input id="bo-phan-bao-cao" value="0" style="width: 100%" />
                                </td>
                                <td style="width: 16%">
                                    <div id="can-bo-report-1">
                                        <label style="float:right">Cán bộ: </label>
                                    </div>
                                </td>
                                <td style="width: 84%">
                                    <div id="can-bo-report-2">
                                        <input id="can-bo-bao-cao" value="0" style="width: 100%" />
                                    </div>
                                </td>
                                <td style="width: 16%"></td>
                                <td style="width: 84%"></td>
                            </tr>
                            <tr>
                                <td style="width: 25%">
                                    <label>Thời gian: </label>
                                </td>
                                <td style="width: 75%">
                                    <input id="thoi-gian-bao-cao" value="0" style="width: 100%" />
                                </td>
                                <td style="width: 25%">
                                    <div id="start-report-1" style="float:right">
                                        <label>Từ: </label>
                                    </div>
                                </td>
                                <td style="width: 75%">
                                    <div id="start-report-2">
                                        <input id="start-bao-cao" value="1" style="width: 100%" />
                                    </div>
                                </td>
                                <td style="width: 25%">
                                    <div id="end-report-1" style="float:right">
                                        <label>Đến: </label>
                                    </div>
                                </td>
                                <td style="width: 75%">
                                    <div id="end-report-2">
                                        <input id="end-bao-cao" value="1" style="width: 100%" />
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" style="height: 3em">
                                    <div style="float:left">
                                        <input type="checkbox" value="Bảng kết quả đánh giá" id="cb-kq" />
                                        <label id="lb-kq" style="cursor:pointer">Bảng kết quả đánh giá</label>
                                    </div>
                                    <div style="float:right">
                                        <input type="checkbox" value="Bảng kết quả góp ý" id="cb-gy" />
                                        <label id="lb-gy" style="cursor:pointer">Bảng kết quả góp ý</label>
                                        <script>
                                            $("#lb-kq").click(function () {
                                                $("#cb-kq").prop("checked", !$("#cb-kq").prop("checked"))
                                            })
                                            $("#lb-gy").click(function () {
                                                $("#cb-gy").prop("checked", !$("#cb-gy").prop("checked"))
                                            })
                                        </script>
                                    </div>
                                </td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            </tr>
                            <tr>
                                <td colspan="2">
                                    <center>
                                        <button id="btn-view" style="width: 200px">Xem trước</button>
                                        <button id="btn-report" style="width: 200px">Xuất báo cáo</button>
                                    </center>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                    <div style="margin: 2em 0; clear: both"><hr /></div>
                    <div id="noi-dung-bao-cao">
                        <div id="title-bao-cao-1" style="margin: 1em 0 1em 0; padding: 0.8em; text-align:center"></div>
                        <div id="grid-report-1"></div>
                        <div id="title-bao-cao-2" style="margin: 1em 0 1em 0; padding: 0.8em; text-align:center"></div>
                        <div id="grid-report-2"></div>
                    </div>
                </div> @*#thong-ke-bao-cao*@
            </div> @*#tabstrip-left*@
        </div> @*#main-menu*@

    </div> @*#container*@
</body>
</html>

<style>
    /*
            Use the DejaVu Sans font for display and embedding in the PDF file.
            The standard PDF fonts have no support for Unicode characters.
        */
    .k-grid {
        font-family: "DejaVu Sans", "Arial", sans-serif;
        font-size: 11.5px;
    }

        .k-grid td {
            line-height: 2em;
        }
</style>

<script>
    /*
        This demo renders the grid in "DejaVu Sans" font family, which is
        declared in kendo.common.css. It also declares the paths to the
        fonts below using <tt>kendo.pdf.defineFont</tt>, because the
        stylesheet is hosted on a different domain.
    */
    kendo.pdf.defineFont({
        "DejaVu Sans": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans.ttf",
        "DejaVu Sans|Bold": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Bold.ttf",
        "DejaVu Sans|Bold|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
        "DejaVu Sans|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
        "WebComponentsIcons": "https://kendo.cdn.telerik.com/2017.1.223/styles/fonts/glyphs/WebComponentsIcons.ttf"
    });
</script>

<!-- Load Pako ZLIB library to enable PDF compression -->
<script src="https://kendo.cdn.telerik.com/2018.3.911/js/pako_deflate.min.js"></script>
<script type="x/kendo-template" id="page-template-report">
    <div class="page-template">
        <div class="header">
            <div style="float: right">Trang #: pageNum # / #: totalPages #</div>
            Bảng kết quả đánh giá
        </div>
        <div class="watermark">KẾT QUẢ ĐÁNH GIÁ</div>
        <div class="footer">
            Trang #: pageNum # / #: totalPages #
        </div>
    </div>
</script>
<script type="x/kendo-template" id="page-template-feedback">
    <div class="page-template">
        <div class="header">
            <div style="float: right">Trang #: pageNum # / #: totalPages #</div>
            Bảng góp ý
        </div>
        <div class="watermark">GÓP Ý</div>
        <div class="footer">
            Trang #: pageNum # / #: totalPages #
        </div>
    </div>
</script>

<script>
    var mabp;
    var macb;
    var url = "http://192.168.1.6/htdg";
    //var url = window.location.origin;
    var clickBP = false;
    var clickCB = false;
    // Tạo tabstrip vị trí bên trái
    function createTabStrip() {
        $("#tabstrip-left").kendoTabStrip({
            tabPosition: "top",
            animation: { open: { effects: "fadeIn" } }
        });
    }

    // ============ Bộ phận ==============
    // Nút tên bộ phận: sử dụng ajax để lấy dữ liệu tên và mã bộ phận
    function getBPName() {
        var str = "";
        $.ajax({
            type: "GET",
            url: url + "/api/BoPhan",
            dataType: "json",
            success: function (data) {
                $.each(data, function (key, val) {
                    str += "<div id='" + val.MaBP + "' class='btnBP'>" + val.TenBP + "</div>";
                });
                $("#cac-bo-phan").html(str);
                createButtonBP();
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        });
    }
    // Nút tên bộ phận: tạo phương thức click
    function onClickBtnBP(e) {
        $("#cac-bo-phan").hide("slow");
        $("#bo-phan").show("slow");
        $("#div-month-circle-1").hide();
        $("#table-details-bp").hide();
        $("#click-details-bp").text("Xem chi tiết");
        clickBP = false;
        setTimeout(function () {
            mabp = $(e.event.target).attr("id");
            $("#bo-phan div h1").text($(e.event.target).text());
            createMonthCircle(mabp);
            createChartTableAll();
            createYearColumn(mabp);
            $("#cb-all").prop("checked", true);
            getCBName(url + "/api/BoPhan/?_MaBP=" + mabp);
        }, 500);
    }
    // Nút tên bộ phận: tạo form nút
    function createButtonBP() {
        $(".btnBP").each(function (index) {
            $(this).kendoButton({
                click: onClickBtnBP
            });
        });
    }
    // Nút tên bộ phận: sự kiện click vào menu xem kết quả
    $("#menu-xem-ket-qua").click(getBPName)
    // Tạo sự kiện nút quay lại bộ phận
    function backBP() {
        $("#cac-bo-phan").show("slow");
        $("#bo-phan").hide("slow");
    }
    // Tạo biểu đồ tròn
    function createChartCircleBP(urlStr, titleStr) {
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            schema: {
                model: {
                    fields: {
                        category: { type: "string" },
                        value: { type: "number" },
                        color: { type: "string" },
                    }
                }
            },
        });
        $("#chart-circle-bp").kendoChart({
            dataSource: dataSource,
            title: {
                text: titleStr,
                position: "bottom",
            },
            legend: {
                position: "top"
            },
            seriesDefaults: {
                labels: {
                    template: "#= category # - #= kendo.format('{0:P}', percentage)#",
                    position: "outsideEnd",
                    visible: true,
                    background: "transparent"
                },
                type: "pie"
            },
            series: [
                {
                    field: "value",
                    categoryField: "category",
                    color: "color"
                }
            ],
            tooltip: {
                visible: true,
                template: "#= category # - #= kendo.format('{0:P}', percentage) #"
            }
        });

    }
    // Tạo bảng chi tiết
    function createTableBP(urlStr, titleStr) {
        //$("#grid-ty-le").html("");
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MucDo",
                    fields: {
                        MucDo: { type: "number" },
                        Loai: {
                            type: "string", validation: { required: true }
                        },
                        TyLe: {
                            type: "number", validation: { required: true }
                        },
                        SoLan: {
                            type: "number", validation: { required: true }
                        }
                    }
                }
            },
            aggregate: { field: "SoLan", aggregate: "sum" }
        });

        var grid = $("#grid-ty-le").kendoGrid({
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            columns: [
                { field: "Loai", title: "Mức độ đánh giá", width: 3 },
                { field: "TyLe", title: "Tỷ lệ (%)", width: 1 },
                {
                    field: "SoLan", title: "Số lần", width: 1,
                    aggregates: ["sum"],
                    footerTemplate: "<div>Tổng cộng: #=sum#</div>"
                }
            ],
        }).data("kendoGrid");
        $("#span-title-table-1").text(titleStr);
    }
    // Tạo bảng chi tiết (Mức độ đánh giá)
    function createTableBP_MucDo(urlStr, titleStr, idGrid, idSpan) {
        //$(idGrid).html("");
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MaCB",
                    fields: {
                        MaCB: { type: "number" },
                        HoTen: {
                            type: "string", validation: { required: true }
                        },
                        TyLe: {
                            type: "number", validation: { required: true }
                        },
                        SoLan: {
                            type: "number", validation: { required: true }
                        }
                    }
                }
            },
            aggregate: { field: "SoLan", aggregate: "sum" }
        });

        var grid = $(idGrid).kendoGrid({
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            columns: [
                { field: "HoTen", title: "Họ tên cán bộ", width: 3 },
                { field: "TyLe", title: "Tỷ lệ (%)", width: 1 },
                {
                    field: "SoLan", title: "Số lần", width: 1,
                    aggregates: ["sum"],
                    footerTemplate: "<div>Tổng cộng: #=sum#</div>"
                }
            ],
        }).data("kendoGrid");
        $(idSpan).text(titleStr);
    }
    // Tạo biểu đồ cột
    function createChartColumnBP(urlStr, titleStr) {
        dataSource = new kendo.data.DataSource({
            transport: {
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            schema: {
                model: {
                    fields: {
                        thang: { type: "string" },
                        RHL: { type: "number" },
                        HL: { type: "number" },
                        BT: { type: "number" },
                        KHL: { type: "number" },
                    }
                }
            }
        });
        $("#chart-column-bp").kendoChart({
            dataSource: dataSource,
            title: {
                text: titleStr
            },
            legend: {
                position: "top"
            },
            seriesDefaults: {
                type: "column",
                stack: { type: "100%" }
            },
            series:
                [{
                    field: "RHL",
                    categoryField: "thang",
                    name: "Rất hài lòng",
                    color: "#37b24d"
                }, {
                    field: "HL",
                    categoryField: "thang",
                    name: "Hài lòng",
                    color: "#228be6"
                }, {
                    field: "BT",
                    categoryField: "thang",
                    name: "Bình thường",
                    color: "#ffd43b"
                }, {
                    field: "KHL",
                    categoryField: "thang",
                    name: "Không hài lòng",
                    color: "#fa5252"
                }],
            categoryAxis: {
                labels: {
                    rotation: -90
                },
                majorGridLines: {
                    visible: false
                }
            },
            valueAxis: {
                labels: {
                    format: "{0:p0}"
                },
                line: {
                    visible: false
                },
                axisCrossingValue: 0
            },
            tooltip: {
                visible: true,
                format: "{0}%",
                template: "#= series.name #: #= value # ( #= kendo.format('{0:P}', percentage) # )"
            }
        });
    }
    // Phương thức tạo đồ thị và bảng
    function createChartTableAll() {
        var urlStr = url + "/api/KetQuaDanhGia/?_MaBP=" + mabp;
        createChartCircleBP(urlStr, "Kết quả đánh giá (Tổng hợp)");

        var urlStr1 = url + "/api/BangDanhGia/?_MaBP=" + mabp;
        createTableBP(urlStr1, "Kết quả đánh giá (Tổng hợp)");

        var urlStr2 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 1;
        createTableBP_MucDo(urlStr2, "Mức độ - Rất hài lòng (Tổng hợp)", "#grid-rat-hai-long", "#span-title-table-2")

        var urlStr3 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 2;
        createTableBP_MucDo(urlStr3, "Mức độ - Hài lòng (Tổng hợp)", "#grid-hai-long", "#span-title-table-3")

        var urlStr4 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 3;
        createTableBP_MucDo(urlStr4, "Mức độ - Bình thường (Tổng hợp)", "#grid-binh-thuong", "#span-title-table-4")

        var urlStr5 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 4;
        createTableBP_MucDo(urlStr5, "Mức độ - Không hài lòng (Tổng hợp)", "#grid-khong-hai-long", "#span-title-table-5")
    }
    // Phương thức tạo đồ thị và bảng theo thời gian
    function createChartTableTime() {
        var time = '&_ThoiGian=' + $("#month-circle").val();
        var date = $("#month-circle").val();
        var urlStr = url + "/api/KetQuaDanhGia/?_MaBP=" + mabp + time;
        createChartCircleBP(urlStr, "Kết quả đánh giá (" + date + ")");

        var urlStr1 = url + "/api/BangDanhGia/?_MaBP=" + mabp + time;
        createTableBP(urlStr1, "Kết quả đánh giá (" + date + ")");

        var urlStr2 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 1 + time;
        createTableBP_MucDo(urlStr2, "Mức độ - Rất hài lòng (" + date + ")", "#grid-rat-hai-long", "#span-title-table-2")

        var urlStr3 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 2 + time;
        createTableBP_MucDo(urlStr3, "Mức độ - Hài lòng (" + date + ")", "#grid-hai-long", "#span-title-table-3")

        var urlStr4 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 3 + time;
        createTableBP_MucDo(urlStr4, "Mức độ - Bình thường (" + date + ")", "#grid-binh-thuong", "#span-title-table-4")

        var urlStr5 = url + "/api/BangDanhGia/?_MaBP=" + mabp + "&_MucDo=" + 4 + time;
        createTableBP_MucDo(urlStr5, "Mức độ - Không hài lòng (" + date + ")", "#grid-khong-hai-long", "#span-title-table-5")
    }
    // Tạo phương thức cho sự kiện checkbox xem tất cả để tạo biểu đồ tròn
    $("#cb-all").change(function () {
        if ($("#cb-all").prop("checked") == true) {
            createChartTableAll();
            $("#div-month-circle-1").hide("slow");
        } else {
            createMonthCircle(mabp);
            createChartTableTime();
            $("#div-month-circle-1").show("slow");
        }
    });
    // Tạo thanh chọn thời gian cho biểu đồ tròn
    function createMonthCircle(MaBP) {
        $.ajax({
            type: "GET",
            url: url + "/api/Values/?_MaBP=" + MaBP,
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {
                    $("#content-bp").show();
                    $("#month-circle").kendoDatePicker({
                        start: "year",
                        depth: "year",
                        format: "MM yyyy",
                        dateInput: false,
                        value: new Date(),
                        min: new Date(data[0]),
                        max: new Date(data[1]),
                        //disableDates: ["sa", "su"]
                    });
                } else {
                    $("#month-circle").val("09 2018");
                    $("#content-bp").hide();
                }
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo sự kiện chọn thời gian
    $("#month-circle").change(function () {
        createChartTableTime();
    })
    // Tạo nút xem chi tiết
    $("#click-details-bp").click(function () {
        if (!clickBP) {
            $("#table-details-bp").show("slow");
            $("#click-details-bp").text("Thu gọn");
            clickBP = true;
        } else {
            $("#table-details-bp").hide("slow");
            $("#click-details-bp").text("Xem chi tiết");
            clickBP = false;
        }
    })
    // Tạo dropdownlist chọn năm
    function createYearColumn(MaBP) {
        $.ajax({
            type: "GET",
            url: url + "/api/Values/?_MaBP=" + MaBP,
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {
                    $("#content-bp").show();
                    var arr = [];
                    var j = 0;
                    var arr1 = data[0].split(" ");
                    var arr2 = data[1].split(" ");
                    for (var i = Number.parseInt(arr1[0]); i <= Number.parseInt(arr2[0]); i++) {
                        arr[j] = { text: i.toString(), value: i.toString() };
                        j++;
                    }
                    $("#year-column").kendoDropDownList({
                        dataTextField: "text",
                        dataValueField: "value",
                        dataSource: arr
                    });
                    createChartColumnBP(url + "/api/CotDanhGia/?_MaBP=" + mabp + "&_Year=" + $("#year-column").val(), "Kết quả tổng hợp năm " + $("#year-column").val());
                } else {
                    $("#div-year-column").val(0);
                    $("#content-bp").hide();
                }
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo sự kiện cho dropdownlist chọn năm
    $("#year-column").change(function () {
        createChartColumnBP(url + "/api/CotDanhGia/?_MaBP=" + mabp + "&_Year=" + $("#year-column").val(), "Kết quả tổng hợp năm " + $("#year-column").val());
    })

    // ============ Cán bộ ==============
    // Tạo sự kiện nút quay lại cán bộ
    function backCB() {
        $("#bo-phan").show("slow");
        $("#can-bo").hide("slow");
    }
    // Nút tên cán bộ: sử dụng ajax để lấy dữ liệu tên và mã cán bộ
    function getCBName(urlStr) {
        var str = "<table style='width: 98%; margin: 1%'>";
        $.ajax({
            type: "GET",
            url: urlStr,
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {
                    //var i = 0;
                    $.each(data, function (key, val) {
                        str += "<tr><td><div id='" + val.MaCB + "' class='btnCB' style='width: 100%; margin: 2px'><span class=' k-icon k-i-user'></span>" + val.HoTen + " - " + val.MaCB + "</div></td></tr>";
                        //if (i == 3) {
                        //    str += "</tr><tr><td><div id='" + val.MaCB + "' class='btnCB' style='width: 100%; margin: 2px'><span class=' k-icon k-i-user'></span>" + val.HoTen + " - " + val.MaCB + "</div></td>";
                        //    i = 0;
                        //}
                        //i++;
                    });
                    str += "</table>";
                    $("#div-button-canbo").html(str);
                    createButtonCB();
                } else {
                    $("#content-ten-can-bo").hide();
                }
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Nút tên cán bộ: tạo form nút
    function createButtonCB() {
        $(".btnCB").each(function (index) {
            $(this).kendoButton({
                click: onClickBtnCB
            });
        });
    }
    // Nút tên cán bộ: tạo phương thức click
    function onClickBtnCB(e) {
        $("#bo-phan").hide("slow");
        $("#can-bo").show("slow");
        $("#div-month-circle-cb-1").hide();
        $("#table-details-cb").hide();
        $("#click-details-cb").text("Xem chi tiết");
        clickCB = false;
        macb = $(e.event.target).attr("id");
        setTimeout(function () {
            $("#can-bo div h1").text("Cán bộ: " + $(e.event.target).text() + " - Mã số: " + $(e.event.target)[0].id);
            createYearColumnCB(macb);
            createChartCircleCB(url + "/api/KetQuaDanhGia/?_MaCB=" + macb, "Kết quả đánh giá (Tổng hợp)");
            createMonthCircleCB(macb);
            createTableCB(url + "/api/BangDanhGia/?_MaCB=" + macb, "Kết quả đánh giá (Tổng hợp)");
            createTableGopY(url + "/api/BangDanhGia/?_MaCBGopY=" + macb, "Bảng góp ý (Tổng hợp)");
            $("#cb-all-cb").prop("checked", true);
        }, 800);
    }
    // Tạo biểu đồ cột
    function createChartColumnCB(urlStr, titleStr) {
        dataSource = new kendo.data.DataSource({
            transport: {
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            schema: {
                model: {
                    fields: {
                        thang: { type: "string" },
                        RHL: { type: "number" },
                        HL: { type: "number" },
                        BT: { type: "number" },
                        KHL: { type: "number" },
                    }
                }
            }
        });
        $("#chart-column-cb").kendoChart({
            dataSource: dataSource,
            title: {
                text: titleStr
            },
            legend: {
                position: "top"
            },
            seriesDefaults: {
                type: "column",
                stack: { type: "100%" }
            },
            series:
                [{
                    field: "RHL",
                    categoryField: "thang",
                    name: "Rất hài lòng",
                    color: "#37b24d"
                }, {
                    field: "HL",
                    categoryField: "thang",
                    name: "Hài lòng",
                    color: "#228be6"
                }, {
                    field: "BT",
                    categoryField: "thang",
                    name: "Bình thường",
                    color: "#ffd43b"
                }, {
                    field: "KHL",
                    categoryField: "thang",
                    name: "Không hài lòng",
                    color: "#fa5252"
                }],
            categoryAxis: {
                labels: {
                    rotation: -90
                },
                majorGridLines: {
                    visible: false
                }
            },
            valueAxis: {
                labels: {
                    format: "{0:p0}"
                },
                line: {
                    visible: false
                },
                axisCrossingValue: 0
            },
            tooltip: {
                visible: true,
                format: "{0}%",
                template: "#= series.name #: #= value # ( #= kendo.format('{0:P}', percentage) # )"
            }
        });
    }
    // Tạo biểu đồ tròn
    function createChartCircleCB(urlStr, titleStr) {
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            schema: {
                model: {
                    fields: {
                        category: { type: "string" },
                        value: { type: "number" },
                        color: { type: "string" },
                    }
                }
            },
        });
        $("#chart-circle-cb").kendoChart({
            dataSource: dataSource,
            title: {
                text: titleStr,
                position: "bottom",
            },
            legend: {
                position: "top"
            },
            seriesDefaults: {
                labels: {
                    template: "#= category # - #= kendo.format('{0:P}', percentage)#",
                    position: "outsideEnd",
                    visible: true,
                    background: "transparent"
                },
                type: "pie"
            },
            series: [
                {
                    field: "value",
                    categoryField: "category",
                    color: "color"
                }
            ],
            tooltip: {
                visible: true,
                template: "#= category # - #= kendo.format('{0:P}', percentage) #"
            }
        });
    }
    // Tạo bảng chi tiết
    function createTableCB(urlStr, titleStr) {
        //$("#grid-ty-le-cb").html("");
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MucDo",
                    fields: {
                        MucDo: { type: "number" },
                        Loai: {
                            type: "string", validation: { required: true }
                        },
                        TyLe: {
                            type: "number", validation: { required: true }
                        },
                        SoLan: {
                            type: "number", validation: { required: true }
                        }
                    }
                }
            },
            aggregate: { field: "SoLan", aggregate: "sum" }
        });

        var grid = $("#grid-ty-le-cb").kendoGrid({
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            columns: [
                { field: "Loai", title: "Mức độ đánh giá", width: 3 },
                { field: "TyLe", title: "Tỷ lệ (%)", width: 1 },
                {
                    field: "SoLan", title: "Số lần", width: 1,
                    aggregates: ["sum"],
                    footerTemplate: "<div>Tổng cộng: #=sum#</div>"
                }
            ],
        }).data("kendoGrid");
        $("#span-title-table-cb-1").text(titleStr);
    }
    // Tạo bảng góp ý
    function createTableGopY(urlStr, titleStr) {
        //$("#grid-gop-y").html("");
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MaDG",
                    fields: {
                        MaDG: { type: "number" },
                        MucDo: {
                            type: "string", validation: { required: true }
                        },
                        GopY: {
                            type: "string", validation: { required: true }
                        },
                        ThoiGian: {
                            type: "date", validation: { required: true }
                        },
                        Ngay: {
                            type: "date", validation: { required: true }
                        },
                        SoLan: {
                            type: "number", validation: { required: true }
                        }
                    }
                }
            },
            aggregate: { field: "SoLan", aggregate: "sum" }
        });

        var grid = $("#grid-gop-y").kendoGrid({
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            columns: [
                { field: "Ngay", title: "Ngày", width: 1, format: "{0:dd MM yyyy}" },
                { field: "ThoiGian", title: "Thời gian", width: 1, format: "{0:hh mm ss}" },
                { field: "MucDo", title: "Mức độ đánh giá", width: 1 },
                { field: "GopY", title: "Góp ý", width: 5 },
                {
                    field: "SoLan", title: "Số lần", width: 1,
                    aggregates: ["sum"],
                    footerTemplate: "<div>Tổng cộng: #=sum#</div>"
                }
            ],
        }).data("kendoGrid");
        $("#span-title-table-gop-y").text(titleStr);
    }
    // Tạo phương thức cho sự kiện checkbox xem tất cả để tạo biểu đồ tròn
    $("#cb-all-cb").change(function () {
        var urlStr = url + "/api/KetQuaDanhGia/?_MaCB=" + macb;
        if ($("#cb-all-cb").prop("checked") == true) {
            createChartCircleCB(urlStr, "Kết quả đánh giá (Tổng hợp)");
            createTableCB(url + "/api/BangDanhGia/?_MaCB=" + macb, "Kết quả đánh giá (Tổng hợp)");
            createTableGopY(url + "/api/BangDanhGia/?_MaCBGopY=" + macb, "Bảng góp ý (Tổng hợp)");
            $("#div-month-circle-cb-1").hide("slow");
        } else {
            var time = '&_ThoiGian=' + $("#month-circle-cb").val();
            var date = $("#month-circle-cb").val();
            var urlStr = url + "/api/KetQuaDanhGia/?_MaCB=" + macb + time;
            createChartCircleCB(urlStr, "Kết quả đánh giá (" + date + ")");
            var urlStr1 = url + "/api/BangDanhGia/?_MaCB=" + macb + time;
            createTableCB(urlStr1, "Kết quả đánh giá (" + date + ")");
            var urlStr2 = url + "/api/BangDanhGia/?_MaCBGopY=" + macb + time;
            createTableGopY(urlStr2, "Bảng góp ý (" + date + ")");
            $("#div-month-circle-cb-1").show("slow");
        }
    });
    // Tạo thanh chọn thời gian cho biểu đồ tròn
    function createMonthCircleCB(MaCB) {
        $.ajax({
            type: "GET",
            url: url + "/api/Values/?_MaCB=" + MaCB,
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {
                    $("#content-can-bo").show();
                    $("#month-circle-cb").kendoDatePicker({
                        start: "year",
                        depth: "year",
                        format: "MM yyyy",
                        dateInput: false,
                        value: new Date(),
                        min: new Date(data[0]),
                        max: new Date(data[1]),
                        //disableDates: ["sa", "su"]
                    });
                } else {
                    $("#month-circle-cb").val("09 2018");
                    $("#content-can-bo").hide();
                }
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo sự kiện chọn thời gian
    $("#month-circle-cb").change(function () {
        var time = '&_ThoiGian=' + $("#month-circle-cb").val();
        var date = $("#month-circle-cb").val();
        var urlStr = url + "/api/KetQuaDanhGia/?_MaCB=" + macb + time;
        createChartCircleCB(urlStr, "Kết quả đánh giá (" + date + ")");
        var urlStr1 = url + "/api/BangDanhGia/?_MaCB=" + macb + time;
        createTableCB(urlStr1, "Kết quả đánh giá (" + date + ")");
        var urlStr2 = url + "/api/BangDanhGia/?_MaCBGopY=" + macb + time;
        createTableGopY(urlStr2, "Bảng góp ý (" + date + ")");
    })
    // Tạo nút xem chi tiết
    $("#click-details-cb").click(function () {
        if (!clickCB) {
            $("#table-details-cb").show("slow");
            $("#click-details-cb").text("Thu gọn");
            clickCB = true;
        } else {
            $("#table-details-cb").hide("slow");
            $("#click-details-cb").text("Xem chi tiết");
            clickCB = false;
        }
    })
    // Tạo dropdownlist chọn năm
    function createYearColumnCB(MaCB) {
        $.ajax({
            type: "GET",
            url: url + "/api/Values/?_MaCB=" + MaCB,
            dataType: "json",
            success: function (data) {
                if (data.length > 0) {
                    $("#content-can-bo").show();
                    var arr = [];
                    var j = 0;
                    var arr1 = data[0].split(" ");
                    var arr2 = data[1].split(" ");
                    for (var i = Number.parseInt(arr1[0]); i <= Number.parseInt(arr2[0]); i++) {
                        arr[j] = { text: i.toString(), value: i.toString() };
                        j++;
                    }
                    $("#year-column-cb").kendoDropDownList({
                        dataTextField: "text",
                        dataValueField: "value",
                        dataSource: arr
                    });
                    createChartColumnCB(url + "/api/CotDanhGia/?_MaCB=" + MaCB + "&_Year=" + $("#year-column-cb").val(), "Kết quả tổng hợp năm " + $("#year-column-cb").val());
                } else {
                    $("#div-year-column-cb").val(0);
                    $("#content-can-bo").hide();
                }
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo sự kiện cho dropdownlist chọn năm
    $("#year-column-cb").change(function () {
        createChartColumnCB(url + "/api/CotDanhGia/?_MaCB=" + macb + "&_Year=" + $("#year-column-cb").val(), "Kết quả tổng hợp năm " + $("#year-column-cb").val());
    })

    // ============ Thông tin tài khoản cán bộ ==============
    // Nút tên bộ phận: sử dụng ajax để lấy dữ liệu tên và mã bộ phận
    function getTKName() {
        var str = "";
        $.ajax({
            type: "GET",
            url: url + "/api/BoPhan",
            dataType: "json",
            success: function (data) {
                $.each(data, function (key, val) {
                    str += "<div id='tk" + val.MaBP + "' class='btnTK'>" + val.TenBP + "</div>";
                });
                $("#tai-khoan-ten-bo-phan").html(str);
                createButtonTK();
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        });
    }
    // Nút tên bộ phận: tạo phương thức click
    function onClickBtnTK(e) {
        $("#tai-khoan-ten-bo-phan").hide("slow");
        $("#div-tai-khoan-can-bo").show("slow");
        setTimeout(function () {
            mabp = $(e.event.target).attr("id").substring(2);
            $("#div-tai-khoan-can-bo h1").text($(e.event.target).text());
            //createTableTk(url + "/api/TaiKhoan/?_MaBP=" + mabp + "&_isInfo=" + 1, url + "/TaiKhoan/Update", url + "/TaiKhoan/Delete", url + "/TaiKhoan/Create");
            createTableTk(url + "/api/TaiKhoanAPI/?_MaBP=" + mabp, "", "", "");
        }, 500);
    }
    // Nút tên bộ phận: tạo form nút
    function createButtonTK() {
        $(".btnTK").each(function (index) {
            $(this).kendoButton({
                click: onClickBtnTK
            });
        });
    }
    // Nút tên bộ phận: sự kiện click vào menu xem kết quả
    $("#menu-thong-tin-can-bo").click(getTKName)
    // Tạo sự kiện nút quay lại bộ phận
    function backTK() {
        $("#tai-khoan-ten-bo-phan").show("slow");
        $("#div-tai-khoan-can-bo").hide("slow");
    }
    // Tạo bảng thông tin tài khoản của cán bộ
    function createTableTk(urlGet, urlPut, urlDel, urlPost) {
        //$("#grid-tai-khoan-can-bo").html("");
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlGet,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { model: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MaCB",
                    fields: {
                        MaCB: { type: "number", editable: false, validation: { required: true } },
                        HoTen: { type: "string", validation: { required: true } },
                        HinhAnh: { type: "string", validation: { required: true } },
                        MaBP: { type: "number", validation: { required: true } },
                        Id: { type: "string", validation: { required: true } },
                        Pw: { type: "string", validation: { required: true } }
                    }
                }
            }
        });

        var grid = $("#grid-tai-khoan-can-bo").kendoGrid({
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            toolbar: [{ name: "create", text: "Thêm mới" }],
            columns: [
                { field: "MaCB", title: "Mã số", width: 80 },
                { field: "HoTen", title: "Họ tên", width: 100 },
                { field: "HinhAnh", title: "Hình ảnh", width: 100 },
                { field: "Id", title: "Tài khoản", width: 100 },
                { field: "Pw", title: "Mật khẩu", width: 100 },
                { command: [{ name: "edit", title: "Cập nhật" }, { name: "destroy", title: "Xóa bỏ" }], title: "&nbsp;", width: "250px" }
            ],
            editable: "popup"
        }).data("kendoGrid");
    }

    // ============ Báo cáo ============
    var mabp_report = 0;
    var macb_report = 0;
    var date_report = 0;
    var start_report;
    var end_report;
    // Tạo dropdownlist chọn bộ phận
    function createBPbaocao() {
        $.ajax({
            type: "GET",
            url: url + "/api/BoPhan",
            dataType: "json",
            async: false,
            success: function (data) {
                $("#bo-phan-bao-cao").show();
                var arr = [{ text: "Chọn tất cả", value: 0 }];
                data.forEach(function (item) {
                    arr.push({ text: item.TenBP, value: item.MaBP });
                });
                $("#bo-phan-bao-cao").kendoDropDownList({
                    dataTextField: "text",
                    dataValueField: "value",
                    dataSource: arr,
                    select: selectBPbaocao
                });
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo sự kiện cho dropdownlist bộ phận
    function selectBPbaocao(e) {
        mabp_report = e.dataItem.value;
        if (mabp_report == 0) {
            $("#can-bo-report-1").hide();
            $("#can-bo-report-2").hide();
        } else {
            $("#can-bo-report-1").show();
            $("#can-bo-report-2").show();
            createCBbaocao(mabp_report);
        }
        getDate(mabp_report);
        createDPbaocao(date_report);
    }
    // Tạo dropdownlist chọn cán bộ
    function createCBbaocao(MaBP) {
        var url_report;
        if (MaBP == 0) {
            url_report = url + "/api/BoPhan";
        } else {
            url_report = url + "/api/BoPhan/?_MaBP=" + MaBP;
        }
        $.ajax({
            type: "GET",
            url: url_report,
            dataType: "json",
            success: function (data) {
                $("#can-bo-bao-cao").show();
                var arr = [{ text: "Chọn tất cả", value: 0 }];
                data.forEach(function (item) {
                    arr.push({ text: item.HoTen, value: item.MaCB });
                });
                $("#can-bo-bao-cao").kendoDropDownList({
                    dataTextField: "text",
                    dataValueField: "value",
                    dataSource: arr,
                    select: selectCBbaocao
                });
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo sự kiện cho dropdownlist cán bộ
    function selectCBbaocao(e) {
        macb_report = e.dataItem.value;
    }
    // Tạo phương thức lấy ngày bắt đầu và kết thúc
    function getDate(MaBP) {
        var url_report;
        if (MaBP == 0) {
            url_report = url + "/api/Values";
        } else {
            url_report = url + "/api/Values/?_MaBP=" + MaBP;
        }
        $.ajax({
            type: "GET",
            url: url_report,
            dataType: "json",
            async: false,
            success: function (data) {
                start_report = data[0];
                end_report = data[1];
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        })
    }
    // Tạo dropdownlist chọn kiểu thời gian
    function createTGbaocao() {
        var arr = [
            { text: "Chọn tất cả", value: 0 },
            { text: "Ngày", value: 1 },
            { text: "Tháng", value: 2 },
            { text: "Năm", value: 3 },
        ];
        $("#thoi-gian-bao-cao").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: arr,
            change: changeTGbaocao
        });
    }
    // Tạo sự kiện chọn kiểu thời gian
    function changeTGbaocao() {
        date_report = this.value();
        getDate(mabp_report);
        createDPbaocao(date_report);
    }
    // Tạo datepicker chọn thời gian
    function createDPbaocao(value) {
        var date = new Date(Date.now());
        var start;
        var end;
        $("#start-report-1").show();
        $("#start-report-2").show();
        $("#end-report-1").show();
        $("#end-report-2").show();
        if (value == 0) {
            $("#start-report-1").hide();
            $("#start-report-2").hide();
            $("#end-report-1").hide();
            $("#end-report-2").hide();
        } else if (value == 1) {
            start = $("#start-bao-cao").kendoDatePicker({
                start: "month",
                depth: "month",
                dateInput: false,
                value: date,
                min: new Date(start_report),
                max: new Date(end_report),
                change: startChange
            }).data("kendoDatePicker");
            end = $("#end-bao-cao").kendoDatePicker({
                start: "month",
                depth: "month",
                dateInput: false,
                value: date,
                min: new Date(start_report),
                max: new Date(end_report),
                change: endChange
            }).data("kendoDatePicker");
            start.max(end.value());
            end.min(start.value());
        } else if (value == 2) {
            start = $("#start-bao-cao").kendoDatePicker({
                start: "year",
                depth: "year",
                dateInput: false,
                value: date,
                format: "MM/yyyy",
                min: new Date(start_report),
                max: new Date(end_report),
                change: startChange
            }).data("kendoDatePicker");
            end = $("#end-bao-cao").kendoDatePicker({
                start: "year",
                depth: "year",
                dateInput: false,
                value: date,
                format: "MM/yyyy",
                min: new Date(start_report),
                max: new Date(end_report),
                change: endChange
            }).data("kendoDatePicker");
            start.max(end.value());
            end.min(start.value());
        } else if (value == 3) {
            start = $("#start-bao-cao").kendoDatePicker({
                start: "decade",
                depth: "decade",
                dateInput: false,
                value: date,
                format: "yyyy",
                min: new Date(start_report),
                max: new Date(end_report),
                change: startChange
            }).data("kendoDatePicker");
            end = $("#end-bao-cao").kendoDatePicker({
                start: "decade",
                depth: "decade",
                dateInput: false,
                value: date,
                format: "yyyy",
                min: new Date(start_report),
                max: new Date(end_report),
                change: endChange
            }).data("kendoDatePicker");
            start.max(end.value());
            end.min(start.value());
        }
        function startChange() {
            var startDate = start.value(),
                endDate = end.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                end.min(startDate);
            } else if (endDate) {
                start.max(new Date(endDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }

        function endChange() {
            var endDate = end.value(),
                startDate = start.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                start.max(endDate);
            } else if (startDate) {
                end.min(new Date(startDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }
    }
    // Tạo nút xem báo cáo
    function createButtonReport() {
        $("#btn-view").kendoButton({
            click: onClickBtnReport
        });
        $("#btn-report").kendoButton();
    }
    // Tạo sự kiện nút xem báo cáo
    function onClickBtnReport() {
        $("#noi-dung-bao-cao").html('<div id="title-bao-cao-1" style="margin: 1em 0 1em 0; padding: 0.8em; text-align:center"></div><div id = "grid-report-1" ></div ><div id="title-bao-cao-2" style="margin: 1em 0 1em 0; padding: 0.8em; text-align:center"></div><div id="grid-report-2"></div>');
        var start;
        var end;
        var title1 = "<h2>BẢNG KẾT QUẢ ĐÁNH GIÁ</h2>";
        var title2 = "<h2>BẢNG GÓP Ý</h2> ";
        mabp_report = $("#bo-phan-bao-cao").val();
        if (mabp_report == 0) {
            macb_report = 0;
        }
        else {
            macb_report = $("#can-bo-bao-cao").val();
            title1 += "<h3 style='margin-left: 0'>" + $("#bo-phan-bao-cao").data("kendoDropDownList").text() + "</h3>";
            title2 += "<h3 style='margin-left: 0'>" + $("#bo-phan-bao-cao").data("kendoDropDownList").text() + "</h3>";
            if (macb_report != 0) {
                title1 += "<div><b>Cán bộ: " + $("#can-bo-bao-cao").data("kendoDropDownList").text() + "</b></div>";
                title2 += "<div><b>Cán bộ: " + $("#can-bo-bao-cao").data("kendoDropDownList").text() + "</b></div>";
            }
        }
        if ($("#thoi-gian-bao-cao").val() == 0) {
            start = "";
            end = "";
            title1 += "<div>Tổng hợp</div>";
            title2 += "<div>Tổng hợp</div>";
        } else {
            start = $("#start-bao-cao").val();
            end = $("#end-bao-cao").val();
            title1 += "<div>(" + start + " - " + end + ")</div>";
            title2 += "<div>(" + start + " - " + end + ")</div>";
        }
        if ($("#cb-kq").prop("checked") && $("#cb-gy").prop("checked")) {
            createGridReport(url + "/api/BaoCaoAPI/?_MaBP=" + mabp_report + "&_MaCB=" + macb_report + "&_Start=" + start + "&_End=" + end);
            createGridFeedBack(url + "/api/BaoCaoAPI/?_MaBP=" + mabp_report + "&_MaCB=" + macb_report + "&_Start=" + start + "&_End=" + end + "&_GopY=" + "GopY");
            $("#title-bao-cao-1").html(title1);
            $("#title-bao-cao-2").html(title2);
        }
        else if ($("#cb-kq").prop("checked") && !$("#cb-gy").prop("checked")) {
            createGridReport(url + "/api/BaoCaoAPI/?_MaBP=" + mabp_report + "&_MaCB=" + macb_report + "&_Start=" + start + "&_End=" + end);
            $("#title-bao-cao-1").html(title1);
        }
        else if (!$("#cb-kq").prop("checked") && $("#cb-gy").prop("checked")) {
            createGridFeedBack(url + "/api/BaoCaoAPI/?_MaBP=" + mabp_report + "&_MaCB=" + macb_report + "&_Start=" + start + "&_End=" + end + "&_GopY=" + "GopY");
            $("#title-bao-cao-2").html(title2);
        }
    }
    // Phương thức tạo bảng kết quả báo cáo
    function createGridReport(urlStr) {
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MaCB",
                    fields: {
                        MaCB: { type: "number" },
                        MaBP: { type: "number", validation: { required: true } },
                        TenBP: { type: "string", validation: { required: true } },
                        HoTen: { type: "string", validation: { required: true } },
                        RHL_TyLe: { type: "number", validation: { required: true } },
                        RHL_SoLan: { type: "number", validation: { required: true } },
                        HL_TyLe: { type: "number", validation: { required: true } },
                        HL_SoLan: { type: "number", validation: { required: true } },
                        BT_TyLe: { type: "number", validation: { required: true } },
                        BT_SoLan: { type: "number", validation: { required: true } },
                        KHL_TyLe: { type: "number", validation: { required: true } },
                        KHL_SoLan: { type: "number", validation: { required: true } },
                        TongCong_TyLe: { type: "number", validation: { required: true } },
                        TongCong_SoLan: { type: "number", validation: { required: true } }
                    }
                }
            },
            group: {
                field: "TenBP", aggregates: [
                    { field: "HoTen", aggregate: "count" },
                    { field: "RHL_TyLe", aggregate: "average" },
                    { field: "RHL_SoLan", aggregate: "sum" },
                    { field: "HL_TyLe", aggregate: "average" },
                    { field: "HL_SoLan", aggregate: "sum" },
                    { field: "BT_TyLe", aggregate: "average" },
                    { field: "BT_SoLan", aggregate: "sum" },
                    { field: "KHL_TyLe", aggregate: "average" },
                    { field: "KHL_SoLan", aggregate: "sum" },
                    { field: "TongCong_TyLe", aggregate: "average" },
                    { field: "TongCong_SoLan", aggregate: "sum" },
                    { field: "RHL_TyLe", aggregate: "min" },
                    { field: "RHL_SoLan", aggregate: "min" },
                    { field: "HL_TyLe", aggregate: "min" },
                    { field: "HL_SoLan", aggregate: "min" },
                    { field: "BT_TyLe", aggregate: "min" },
                    { field: "BT_SoLan", aggregate: "min" },
                    { field: "KHL_TyLe", aggregate: "min" },
                    { field: "KHL_SoLan", aggregate: "min" },
                    { field: "TongCong_TyLe", aggregate: "min" },
                    { field: "TongCong_SoLan", aggregate: "min" },
                    { field: "RHL_TyLe", aggregate: "max" },
                    { field: "RHL_SoLan", aggregate: "max" },
                    { field: "HL_TyLe", aggregate: "max" },
                    { field: "HL_SoLan", aggregate: "max" },
                    { field: "BT_TyLe", aggregate: "max" },
                    { field: "BT_SoLan", aggregate: "max" },
                    { field: "KHL_TyLe", aggregate: "max" },
                    { field: "KHL_SoLan", aggregate: "max" },
                    { field: "TongCong_TyLe", aggregate: "max" },
                    { field: "TongCong_SoLan", aggregate: "max" }
                ]
            },

            aggregate: [
                { field: "HoTen", aggregate: "count" },
                { field: "RHL_TyLe", aggregate: "average" },
                { field: "RHL_TyLe", aggregate: "sum" },
                { field: "RHL_TyLe", aggregate: "count" },
                { field: "RHL_SoLan", aggregate: "sum" },
                { field: "HL_TyLe", aggregate: "average" },
                { field: "HL_TyLe", aggregate: "sum" },
                { field: "HL_TyLe", aggregate: "count" },
                { field: "HL_SoLan", aggregate: "sum" },
                { field: "BT_TyLe", aggregate: "average" },
                { field: "BT_TyLe", aggregate: "sum" },
                { field: "BT_TyLe", aggregate: "count" },
                { field: "BT_SoLan", aggregate: "sum" },
                { field: "KHL_TyLe", aggregate: "average" },
                { field: "KHL_TyLe", aggregate: "sum" },
                { field: "KHL_TyLe", aggregate: "count" },
                { field: "KHL_SoLan", aggregate: "sum" },
                { field: "TongCong_TyLe", aggregate: "average" },
                { field: "TongCong_TyLe", aggregate: "sum" },
                { field: "TongCong_TyLe", aggregate: "count" },
                { field: "TongCong_SoLan", aggregate: "sum" },
                { field: "RHL_TyLe", aggregate: "min" },
                { field: "RHL_SoLan", aggregate: "min" },
                { field: "HL_TyLe", aggregate: "min" },
                { field: "HL_SoLan", aggregate: "min" },
                { field: "BT_TyLe", aggregate: "min" },
                { field: "BT_SoLan", aggregate: "min" },
                { field: "KHL_TyLe", aggregate: "min" },
                { field: "KHL_SoLan", aggregate: "min" },
                { field: "TongCong_TyLe", aggregate: "min" },
                { field: "TongCong_SoLan", aggregate: "min" },
                { field: "RHL_TyLe", aggregate: "max" },
                { field: "RHL_SoLan", aggregate: "max" },
                { field: "HL_TyLe", aggregate: "max" },
                { field: "HL_SoLan", aggregate: "max" },
                { field: "BT_TyLe", aggregate: "max" },
                { field: "BT_SoLan", aggregate: "max" },
                { field: "KHL_TyLe", aggregate: "max" },
                { field: "KHL_SoLan", aggregate: "max" },
                { field: "TongCong_TyLe", aggregate: "max" },
                { field: "TongCong_SoLan", aggregate: "max" }
            ]
        });

        var grid = $("#grid-report-1").kendoGrid({
            pdf: {
                allPages: true,
                avoidLinks: true,
                paperSize: "A4",
                margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                landscape: true,
                repeatHeaders: true,
                template: $("#page-template-report").html(),
                scale: 0.8
            },
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            columns: [
                { field: "MaCB", title: "Mã số", width: 50 },
                { field: "HoTen", title: "Họ tên", width: 100, footerTemplate: "Tổng cộng: #=count#", groupFooterTemplate: "Tổng: #=count#" },
                { field: "TenBP", title: "Bộ phận", width: 1, },
                {
                    title: "Rất hài lòng",
                    columns: [
                        { field: "RHL_TyLe", title: "Tỷ lệ(%)", width: 70, groupFooterTemplate: "Trung bình: #if(average==null){#<span>#=0#%</span>#}else{#<span>#=Math.round(average*100)/100#%</span>#}#", footerTemplate: "Trung bình: #=Math.round((sum/count)*100)/100#%" },
                        { field: "RHL_SoLan", title: "Số lần", width: 70, groupFooterTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>", footerTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>" }
                    ]
                },
                {
                    title: "Hài lòng",
                    columns: [
                        { field: "HL_TyLe", title: "Tỷ lệ(%)", width: 70, groupFooterTemplate: "Trung bình: #if(average==null){#<span>#=0#%</span>#}else{#<span>#=Math.round(average*100)/100#%</span>#}#", footerTemplate: "Trung bình: #=Math.round((sum/count)*100)/100#%" },
                        { field: "HL_SoLan", title: "Số lần", width: 70, groupFooterTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>", footerTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>" }
                    ]
                },
                {
                    title: "Bình thường",
                    columns: [
                        { field: "BT_TyLe", title: "Tỷ lệ(%)", width: 70, groupFooterTemplate: "Trung bình: #if(average==null){#<span>#=0#%</span>#}else{#<span>#=Math.round(average*100)/100#%</span>#}#", footerTemplate: "Trung bình: #=Math.round((sum/count)*100)/100#%" },
                        { field: "BT_SoLan", title: "Số lần", width: 70, groupFooterTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>", footerTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>" }
                    ]
                },
                {
                    title: "Không hài lòng",
                    columns: [
                        { field: "KHL_TyLe", title: "Tỷ lệ(%)", width: 70, groupFooterTemplate: "Trung bình: #if(average==null){#<span>#=0#%</span>#}else{#<span>#=Math.round(average*100)/100#%</span>#}#", footerTemplate: "Trung bình: #=Math.round((sum/count)*100)/100#%" },
                        { field: "KHL_SoLan", title: "Số lần", width: 70, groupFooterTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>", footerTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>" }
                    ]
                },
                {
                    title: "Tổng hợp",
                    columns: [
                        { field: "TongCong_TyLe", title: "Tỷ lệ(%)", width: 70, groupFooterTemplate: "Trung bình: #if(average==null){#<span>#=0#%</span>#}else{#<span>#=Math.round(average*100)/100#%</span>#}#", footerTemplate: "Trung bình: #=Math.round((sum/count)*100)/100#%" },
                        { field: "TongCong_SoLan", title: "Số lần", width: 70, groupFooterTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>", footerTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>" }
                    ]
                }
            ],
        }).data("kendoGrid");
        grid.hideColumn("TenBP");
        //$("#span-title-table-cb-1").text(titleStr);
    }
    // Phương thức tạo bảng góp ý
    function createGridFeedBack(urlStr) {
        dataSource = new kendo.data.DataSource({
            transport: {
                serverFiltering: true,
                read: function (options) {
                    $.ajax({
                        type: "GET",
                        url: urlStr,
                        dataType: 'json',
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (result) {
                            options.error(result);
                        }
                    });
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "MaCB",
                    fields: {
                        MaCB: { type: "number" },
                        MaBP: { type: "number", validation: { required: true } },
                        TenBP: { type: "string", validation: { required: true } },
                        HoTen: { type: "string", validation: { required: true } },
                        MucDoDanhGia: { type: "string", validation: { required: true } },
                        GopY: { type: "string", validation: { required: true } },
                        SoLan: { type: "number", validation: { required: true } }
                    }
                }
            },
            group: {
                field: "TenBP", aggregates: [
                    { field: "HoTen", aggregate: "count" },
                    { field: "SoLan", aggregate: "average" },
                    { field: "SoLan", aggregate: "sum" },
                    { field: "SoLan", aggregate: "min" },
                    { field: "SoLan", aggregate: "max" }
                ]
            },

            aggregate: [
                { field: "HoTen", aggregate: "count" },
                { field: "SoLan", aggregate: "average" },
                { field: "SoLan", aggregate: "sum" },
                { field: "SoLan", aggregate: "min" },
                { field: "SoLan", aggregate: "max" }
            ]
        });

        var grid = $("#grid-report-2").kendoGrid({
            pdf: {
                allPages: true,
                avoidLinks: true,
                paperSize: "A4",
                margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                landscape: true,
                repeatHeaders: true,
                template: $("#page-template-feedback").html(),
                scale: 0.8
            },
            dataSource: dataSource,
            navigatable: true,
            pageable: true,
            columns: [
                { field: "MaCB", title: "Mã số", width: 80 },
                { field: "HoTen", title: "Họ tên", width: 200, footerTemplate: "Tổng cộng: #=count#", groupFooterTemplate: "Tổng: #=count#" },
                { field: "TenBP", title: "Bộ phận", width: 1 },
                { field: "MucDoDanhGia", title: "Mức độ đánh giá", width: 150 },
                { field: "GopY", title: "Góp ý", width: 0 },
                { field: "SoLan", title: "Số lần", width: 120, groupFooterTemplate: "<div>Tổng: #=sum#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>", footerTemplate: "<div>Tổng: #=sum#</div><div>Trung bình: #=Math.round(average*100)/100#</div><div>Thấp nhất: #= min #</div><div>Cao nhất: #= max #</div>" }
            ],
        }).data("kendoGrid");
        grid.hideColumn("TenBP");
        //$("#span-title-table-cb-1").text(titleStr);
    }
    // Phương thức click nút xuất báo cáo
    $('#btn-report').on('click', function () {
        try {
            if ($('#grid-report-1').html().length > 0 && $('#grid-report-2').html().length > 0) {
                var grid1 = $('#grid-report-1').data('kendoGrid');
                var grid2 = $('#grid-report-2').data('kendoGrid');

                var progress = $.Deferred();
                kendo.drawing.drawDOM($("#title-bao-cao-1"))
                    .done(function (header) {
                        grid1._drawPDF(progress)
                            .then(function (firstGrid) {
                                kendo.drawing.drawDOM($("#title-bao-cao-2"))
                                    .done(function (footer) {
                                        grid2._drawPDF(progress)
                                            .then(function (secondGrid) {
                                                firstGrid.children.unshift(header);
                                                secondGrid.children.unshift(footer)
                                                secondGrid.children.forEach(function (x) {
                                                    firstGrid.children.push(x);
                                                })
                                                return kendo.drawing.exportPDF(firstGrid, { multiPage: true });

                                            }).done(function (dataURI) {
                                                kendo.saveAs({
                                                    dataURI: dataURI,
                                                    fileName: "BaoCao-GopY.pdf"
                                                });
                                                progress.resolve();
                                            })
                                    })
                            })
                    })
            }
            else if ($('#grid-report-1').html().length > 0 && $('#grid-report-2').html().length == 0) {
                var grid1 = $('#grid-report-1').data('kendoGrid');

                var progress = $.Deferred();
                kendo.drawing.drawDOM($("#title-bao-cao-1"))
                    .done(function (header) {
                        grid1._drawPDF(progress)
                            .then(function (firstGrid) {
                                firstGrid.children.unshift(header);
                                return kendo.drawing.exportPDF(firstGrid, { multiPage: true });

                            }).done(function (dataURI) {
                                kendo.saveAs({
                                    dataURI: dataURI,
                                    fileName: "BaoCao.pdf"
                                });
                                progress.resolve();
                            })
                    })
            }
            else if ($('#grid-report-1').html().length == 0 && $('#grid-report-2').html().length > 0) {
                var grid2 = $('#grid-report-2').data('kendoGrid');

                var progress = $.Deferred();
                kendo.drawing.drawDOM($("#title-bao-cao-2"))
                    .done(function (header) {
                        grid2._drawPDF(progress)
                            .then(function (firstGrid) {
                                firstGrid.children.unshift(header);
                                return kendo.drawing.exportPDF(firstGrid, { multiPage: true });

                            }).done(function (dataURI) {
                                kendo.saveAs({
                                    dataURI: dataURI,
                                    fileName: "GopY.pdf"
                                });
                                progress.resolve();
                            })
                    })
            }
        } catch (ex) {
            alert("Yêu cầu phải xem trước hai bảng")
        }
    })

    $(document).ready(function () {
        createTabStrip();
        $("#table-details-bp").hide();
        $("#div-month-circle-1").hide();
        $("#table-details-cb").hide();
        $("#div-month-circle-cb-1").hide();
        $("#bo-phan").hide();
        $("#can-bo").hide();
        $("#div-tai-khoan-can-bo").hide();
        $("#can-bo-report-1").hide();
        $("#can-bo-report-2").hide();
        createBPbaocao();
        createTGbaocao();
        var arr = [{ text: "Chọn tất cả", value: 0 }];
        $("#can-bo-bao-cao").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: arr,
        });

        $("#start-bao-cao").kendoDatePicker({
            start: "month",
            depth: "month",
            dateInput: false,
            value: new Date(Date.now())
        });
        $("#end-bao-cao").kendoDatePicker({
            start: "month",
            depth: "month",
            dateInput: false,
            value: new Date(Date.now())
        });
        $("#start-report-1").hide();
        $("#end-report-1").hide();
        $("#start-report-2").hide();
        $("#end-report-2").hide();

        createButtonReport();
    })
</script>
<style>
    /* Page Template for the exported PDF */
    .page-template {
        font-family: "DejaVu Sans", "Arial", sans-serif;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }

        .page-template .header {
            position: absolute;
            top: 30px;
            left: 30px;
            right: 30px;
            border-bottom: 1px solid #888;
            color: #888;
        }

        .page-template .footer {
            position: absolute;
            bottom: 30px;
            left: 30px;
            right: 30px;
            border-top: 1px solid #888;
            text-align: center;
            color: #888;
        }

        .page-template .watermark {
            font-weight: bold;
            font-size: 400%;
            text-align: center;
            margin-top: 30%;
            color: #aaaaaa;
            opacity: 0.1;
            transform: rotate(-35deg) scale(1.7, 1.5);
        }

    /* Content styling */
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    kendo-pdf-document .customer-photo {
        border: 1px solid #dedede;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>